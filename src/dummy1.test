
import React, { Component, Fragment } from 'react';

import './App.css';


// state 전달받은 값, 내부적으로만 가짐(수정X) 
class App extends Component { 
  state = {
    count: 0,
  } // constructor 밖에서 초기화작업

  // constructor(props){ // constructor 안에 this 는 App
  //   super(props);
  // //   this.state = {
  // //     count : 0, //  constructor 안에서 초기화작업
  // this.increaseCount =this.increaseCount.bind(this);
  // this.decreastCount =this.decreastCount.bind(this);
  // //   }
  // } 

  // increaseCount(){

  //   console.log('increaseCount')
  //   // console.log(this);
  //   // this.state.count = this.state.count+1;
  //   this.setState({
  //     count: this.state.count+1
  //   })

  // }

  // decreastCount(){

  //   console.log('decreastCount')
  //   // console.log(this);
  //   // this.state.count = this.state.count-1;
  //   this.setState({
  //     count: this.state.count-1
  //   })
  // }



  increaseCount = ()=>{

    console.log('increaseCount')
    // console.log(this);
    // this.state.count = this.state.count+1;
    this.setState({
      count: this.state.count+1
    })

  }

  decreastCount = ()=>{

    console.log('decreastCount')
    // console.log(this);
    // this.state.count = this.state.count-1;
    this.setState({
      count: this.state.count-1
    })
  }


  render() { // 어떤것을 보여줄지 안보여줄지

    const {count} = this.state;

    // if(count > 10){
    //   return <h1>초과입니다.</h1>
    // }
    
    // 위 아래 같음

    // count>10?
    // <h1>초과입니다.</h1>:
  

    return (
      count>10?
      <h1>초과입니다.</h1>:
      <Fragment>
      <h1>{count}</h1>
      <button onClick={this.increaseCount}>Up</button>
      <button onClick={this.decreastCount}>Down</button>   
      </Fragment>  
    );

  }
}

export default App;



